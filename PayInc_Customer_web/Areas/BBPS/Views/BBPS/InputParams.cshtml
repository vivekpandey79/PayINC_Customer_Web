@model List<PayInc_Customer_web.Areas.BBPS.Models.InputParamsRes>
@{
    Layout = null;
}
@if (Model != null)
{
    <form action="@Url.Action("FetchBill","BBPS")" method="post" id="form_input_params">
        @Html.AntiForgeryToken()
        @for (int i = 0; i < Model.Count; i++)
        {
            <div class="row">
                <div class="col-lg-6 col-md-12 col-sm-12">
                    <div class="form-group">
                        <label>@Model[i].parameterName</label>
                        <div class="input-group">
                            @if (Model[i].dataType == "1")
                            {
                                <div class="input-group-prepend"><span class="input-group-text"><i class="flaticon2-edit icon-md"></i></span></div>
                                @Html.TextBoxFor(m => Model[i].UserInput, new { @class = "form-control txtAccountNo", placeholder = Model[i].parameterName, Maxlength = Model[i].maxLength, @autocomplete = "off" })
                            }
                            else if (Model[i].dataType == "2")
                            {
                                <div class="input-group-prepend"><span class="input-group-text"><i class="flaticon2-edit icon-md"></i></span></div>
                                @Html.TextBoxFor(m => Model[i].UserInput, new { @class = "form-control txtAccountNo", type = "number", placeholder = Model[i].parameterName, Maxlength = Model[i].maxLength, @autocomplete = "off" })
                            }
                            else if (Model[i].dataType == "3")
                            {
                                <div class="input-group-prepend"><span class="input-group-text"><i class="">₹</i></span></div>
                                @Html.TextBoxFor(m => Model[i].UserInput, new { @class = "form-control txtAccountNo", type = "number", placeholder = Model[i].parameterName, Maxlength = Model[i].maxLength, @autocomplete = "off" })
                            }
                            @if (Model[i].isMandatory == 1)
                            {
                                @Html.ValidationMessageFor(m => Model[i].UserInput, null, new { @class = "text-danger" })
                            }
                        </div>
                        <div class="input-icon">

                        </div>
                        <span class="form-text text-muted">@Model[i].hint</span>
                    </div>
                </div>
                <div class="col-lg-6 col-md-12 col-sm-12"></div>
            </div>
        }
        @if (Model.Count > 0)
        {
            <input type="hidden" value="@Model[0].serviceProviderShortName" name="[0].SSCode" />
            <div class="row">
                <div class="col-lg-6 col-md-12 col-sm-12">
                    <div class="row">
                        <div class="col-lg-6 col-md-12 col-sm-12">
                            <button type="button" class="btn btn-block btn-secondary font-weight-bolder prev-step" data-wizard-type="action-prev">Previous</button>
                        </div>
                        <div class="col-lg-6 col-md-12 col-sm-12">
                            <button type="submit" id="btn_step2" class="btn btn-block btn-primary font-weight-bolder">Next</button>
                        </div>
                    </div>
                </div>
                <div class="col-lg-6 col-md-12 col-sm-12">

                </div>
            </div>
        }
    </form>
}
<script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
<script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
<script src="~/js/bbps_wizard.js"></script>